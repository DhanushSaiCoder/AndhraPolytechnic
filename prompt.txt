Prompt for the code/design-editing LLM

You are an engineer-designer. Improve the attached course card so it looks professional, modern, and polished. Do not ask questions — just produce the changes. Keep the layout and content intact (icon at top-left, small badge, title, short description, thin divider, footer with student count and link) but fix the visual hierarchy, spacing, typography, colors, contrast, alignment and micro-interactions.

Problems to fix (priority order)

Poor visual hierarchy — title does not stand out enough vs. body text.

Bad spacing and alignment — elements feel cramped and disconnected.

Weak color and contrast — badge and small text hard to read; card looks flat/amateur.

Overly soft shadow / no depth — either refine subtle elevation or use modern glass/float feel.

Inconsistent radii, paddings, and font sizes.

No small interaction states (hover/focus) or accessible contrast/aria.

Design rules & tokens (use these exact tokens)

Card background: --bg: #FFFFFF

Page background: --page-bg: #F3F8FC

Accent (primary) blue: --primary: #2563EB (hex)

Muted text: --muted: #6B7280

Primary text: --text: #0F172A

Badge bg: --badge-bg: #E6F2FF (light blue)

Border radius: --radius: 16px (card), icons 8px

Card padding: 24px (desktop), 16px (mobile)

Title: 20–22px, font-weight: 700, line-height: 1.2

Body/description: 14px, font-weight: 400, line-height: 1.5

Footer text: 13px, muted color

Shadow: box-shadow: 0 8px 24px rgba(15, 23, 42, 0.08) (subtle)

Focus outline: 2px solid rgba(37,99,235,0.25) (accessible)

Accessibility

Ensure color contrast >= 4.5:1 for title and important text, >=3:1 for secondary where required.

Add role="article" and aria-label="Computer Engineering card" to card.

Make Learn More link keyboard-focusable with visible focus state.

Deliverables (exact format)

A single patch (diff) that modifies or replaces these files: Card.jsx (or card.html), card.css (or Tailwind classes). If you prefer Tailwind, provide a Tailwind-compatible component plus a small fallback CSS file.

Provide the final full file contents (not fragments) for each changed file.

A short changelog (6 bullet points max) that states what you changed and why — brutally direct.

A small testing checklist (3 items) I can use to verify visually and accessibly.

A preview screenshot is nice but optional — if you can’t generate an image, skip it.

Implementation specifics (choose one and implement)

Option A — React + Tailwind: produce Card.jsx using Tailwind utility classes matching the design tokens above. Include minor JS only for hover state (no dependencies).

Option B — Vanilla HTML + CSS: produce card.html and card.css using CSS variables as listed above. Include responsive rules for max-width: 420px and breakpoints for mobile.

Code quality expectations

Use semantic HTML, BEM or component-style class names, tidy indentation.

Minimize reliance on images — use inline SVG for the icon.

Keep CSS scoped to the component (CSS module, :scope, or prefixed classes).

Return a patch with clear diff (context lines) and full file contents.

Example of what I want in the final UI

A compact icon block with a dark-accent rounded square on the left, icon white, slight inset.

A readable bold title that dominates the card.

Short description with increased line-height and muted color.

A subtle divider and a footer: left shows small user icon + “850+ Students”, right shows “Learn More →” link with hover underline and focus ring.

Card should feel lightweight, elevated and intentionally spaced — not bubbly or toy-like.

Do not: produce multiple design options. Do one good, professional implementation that uses the tokens above. Do not include unrelated refactors.

Now produce the patch and full updated files requested.